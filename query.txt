[out:json];

(area["name"="Patos"]["place"="municipality"];)->.a;

(
  way
  ["highway"]
  ["highway"!="footway"]
  ["highway"!="bridleway"]
  ["highway"!="steps"]
  ["highway"!="path"]
  ["highway"!="cycleway"]
  ["highway"!="pedestrian"]
  ["highway"!="proposed"]
  ["highway"!="service"]
  ["highway"!="living_street"]
  ["highway"!="raceway"]
  (area.a);
);

(._;>;);

out;

Patos city
[out:json];

(area["name"="Patos"]["border_type"=district];)->.a;

(
  way
  ["highway"]
  ["highway"!="footway"]
  ["highway"!="bridleway"]
  ["highway"!="steps"]
  ["highway"!="path"]
  ["highway"!="cycleway"]
  ["highway"!="pedestrian"]
  ["highway"!="proposed"]
  ["highway"!="service"]
  ["highway"!="living_street"]
  ["highway"!="raceway"]
  (area.a);
);

(._;>;);

out;

[out:json];

(
  way
  ["highway"]
  ["highway"!="footway"]
  ["highway"!="bridleway"]
  ["highway"!="steps"]
  ["highway"!="path"]
  ["highway"!="cycleway"]
  ["highway"!="pedestrian"]
  ["highway"!="proposed"]
  ["highway"!="service"]
  ["highway"!="living_street"]
  ["highway"!="raceway"]
  (around: 2000, -7.0258285, -37.2766817);
);

out geom;

// The final query
[out:json];
// Fetch the area id into variable `a`
(area["name"="Patos"]["place"="municipality"];)->.a;

// Fetch all ways with a highway tag equal to `cycleway`
// inside area `a`
way
  ["highway"]
  ["highway"!="footway"]
  ["highway"!="bridleway"]
  ["highway"!="steps"]
  ["highway"!="path"]
  ["highway"!="cycleway"]
  ["highway"!="pedestrian"]
  ["highway"!="proposed"]
  ["highway"!="service"]
  ["highway"!="living_street"]
  ["highway"!="raceway"]
(area.a);

// And join those highways with lat/lon points:
node(w);

// print everything to the output.
out meta;



Vista serrana
[out:json];
	way
      ["highway"]
      ["highway"!="footway"]
      ["highway"!="bridleway"]
      ["highway"!="steps"]
      ["highway"!="path"]
      ["highway"!="cycleway"]
      ["highway"!="pedestrian"]
      ["highway"!="proposed"]
      ["highway"!="service"]
      ["highway"!="living_street"]
      ["highway"!="raceway"]
    (around: 420, -6.7402653, -37.5691605);
	node(w);
out geom;

Pegar todos os CEPS
[out:json];
	(area["name"="Patos"]["place"="municipality"];)->.a;
    (
        node["addr:postcode"](area.a);
        way["addr:postcode"](area.a);
        relation["addr:postcode"](area.a);
    );
out geom;



[out:json];
// fetch area “Patos PB” to search in
(area["name"="Patos"]["place"="municipality"];)->.searchArea;
// gather results
(
  node[place~"suburb"](area.searchArea);
);
// print results
out body;
>;
out skel qt;

[out:json];
// fetch area “Patos PB” to search in
(area["name"="Patos"]["place"="municipality"];)->.searchArea;
// gather results
(
  relation[place~"suburb"](area.searchArea);
);
// print results
out body;
>;
out skel qt;

[out:csv(::id, 'name', 'is_in', 'place')][timeout:25];
// fetch area “Patos PB” to search in
(area["name"="Patos"]["place"="municipality"];)->.searchArea;
// gather results
(
  node[place~"suburb"](area.searchArea);
);
// print results
out body;
>;
out skel qt;

// get suburbs and neighbourhoods
[out:json];
// fetch area “Patos PB” to search in
(area["name"="Patos"]["place"="municipality"];)->.searchArea;
// gather results
(
  relation["boundary"="administrative"]["admin_level"="10"](area.searchArea);
  node[place~"suburb|neighbourhood"](area.searchArea);
);
// print results
out body;
>;
out skel qt;


[out:json];

(area["name"~"Santa Cecília|Centro|Jatobá|Alto da Tubiba|Ana Leite|Bela Vista|Belo Horizonte|Bivar Olinto|Brasília|Distrito Industrial|Jardim Magnólia|Liberdade|Maternidade|Monte Castelo|Morada do Sol|Morro|Nova Conquista|Novo Horizonte|Noé Trajano|Salgadinho|Santo Antônio|Sete Casas|São Sebastião|Jardim Europa|Jardim Assunção|Estados"]["place"="suburb"];)->.a;

(
  way(around: 4000, -7.0258285, -37.2766817)
  ["highway"]
  ["highway"!="footway"]
  ["highway"!="bridleway"]
  ["highway"!="steps"]
  ["highway"!="path"]
  ["highway"!="cycleway"]
  ["highway"!="pedestrian"]
  ["highway"!="proposed"]
  ["highway"!="service"]
  ["highway"!="living_street"]
  ["highway"!="raceway"]
  (area.a);
);

(._;>;);

out;

Patos por ibge
[out:json];

(area["IBGE:GEOCODIGO"=251080805];)->.a;

(
  way(around: 4600, -7.0258285, -37.2766817)
  ["highway"]
  ["highway"!="footway"]
  ["highway"!="bridleway"]
  ["highway"!="steps"]
  ["highway"!="path"]
  ["highway"!="cycleway"]
  ["highway"!="pedestrian"]
  ["highway"!="proposed"]
  ["highway"!="service"]
  ["highway"!="living_street"]
  ["highway"!="raceway"]
  (area.a);
);

(._;>;);

out;


[out:json];

(area["IBGE:GEOCODIGO"=251080805];)->.a;

(
  way(around: 4600, -7.0258285, -37.2766817)
  ["highway"]
  ["highway"!="footway"]
  ["highway"!="bridleway"]
  ["highway"!="steps"]
  ["highway"!="path"]
  ["highway"!="cycleway"]
  ["highway"!="pedestrian"]
  ["highway"!="proposed"]
  ["highway"!="service"]
  ["highway"!="living_street"]
  ["highway"!="raceway"]
  (area.a);
);

out geom;